import { getSecret } from 'wix-secrets-backend';
import { fetch } from 'wix-fetch';
import * as tools from 'public/tools';
import wixData from 'wix-data';

export async function sendOrderInformationNotifications(orderObj, chargeObj, table) {
    /// Customer
    let subject = "Информация за Вашата поръчка";
    let name = tools.transliterate(orderObj.cardholder);
    let payAmount = chargeObj.amount / 100;
    let placeAndTime = "";
    if (orderObj.address2 != "") {
        placeAndTime = `<div style="text-align: center; color: #000; font-weight: bold; font-size: calc(12px + 1vw);">адрес: ${orderObj.address1.formatted}<br>
                        адрес 2: ${orderObj.address2}<br>
                        дата: ${orderObj.date}<br>
                        час: ${orderObj.time}</div>`;
    }
    else {
        placeAndTime = `<div style="text-align: center; color: #000; font-weight: bold; font-size: calc(12px + 1vw);">адрес: ${orderObj.address1.formatted}<br>
                        дата: ${orderObj.date}<br>
                        час: ${orderObj.time}</div>`;
    }

    // Prepare table for ordered items
    let tableContent = `<table style="font-family: arial, sans-serif; border-collapse: collapse; width: 100%;">
                            <tr style="background-color: #ffffff;">
                                <th style="border-bottom: 1px solid #dddddd; text-align: center; padding: 3px; color: #000; font-size: calc(12px + 1vw);">продукт</th>
                                <th style="border-bottom: 1px solid #dddddd; text-align: center; padding: 3px; color: #000; font-size: calc(12px + 1vw);">к-во</th>
                                <th style="border-bottom: 1px solid #dddddd; text-align: center; padding: 3px; color: #000; font-size: calc(12px + 1vw);">цена</th>
                            </tr>`;
    table.forEach(item => {
        tableContent += `<tr>
        <td style="text-align: center; padding: 3px; color: #000; font-size: calc(12px + 1vw);">${item.title}</td>
        <td style="text-align: center; padding: 3px; color: #000; font-size: calc(12px + 1vw);">${item.amount}</td>
        <td style="text-align: center; padding: 3px; color: #000; font-size: calc(12px + 1vw);">${item.price} лв.</td>
        </tr>`;
    });
    tableContent += `<tr>
    <th colspan='2' style="border-top: 1px solid #dddddd; text-align: right; padding: 3px; color: #000; font-size: calc(12px + 1vw);">Обща цена:</th>
    <th style="border-top: 1px solid #dddddd; text-align: center; padding: 3px; color: #000; font-size: calc(12px + 1vw);">${chargeObj.amount} лв.</th></tr>`;
    tableContent += "</table>";

    let body = `<div style="color: #000; font-size: calc(12px + 1vw); text-align: center;">Уважаеми ${name},<br><br>
                Вашата поръчка:<br><br>
                ${tableContent}<br><br>
                ще бъде доставена на:<br><br>
                ${placeAndTime}<br><br>
                <br><br>
                Натиснете <a href="https://google.com">тук</a> за да проследите поръчката си.<br><br>
                Благодарим Ви, че избрахте нас,<br>
                Екипът на BabaSgotvi</div>`;
    await sendEmail(orderObj.email, subject, body);

    /// Provider
    const providerAddress = ""; // get from database
    const providerEmail = await wixData.get('ProviderList', orderObj.providerId)
        .then(result => result.email)
        .catch(error => {
            console.error('Error:', error);
            return '';
        });
    console.log("providerEmail: " + providerEmail);
    let routeTime = await tools.calculateRouteTime(providerAddress, orderObj.address1.formatted);
    let time = tools.addMinutes(orderObj.time, -routeTime);

    subject = `Нова поръчка за ${payAmount} лв. | BabaSgotvi`; // TODO: FIX, THE PROVIDER SHOULD GET 75% NOT 100%
    body = `<div style="color: #000; font-size: calc(12px + 1vw); text-align: center;">Имате нова поръчка за ${payAmount} лв:<br><br>
            ${tableContent}<br><br>
            за ${orderObj.date} в ${time}<br><br>
            Моля бъдете готови с поръчката предварително, защото доставчикът може да подрани.</div>`;

    await sendEmail(providerEmail, subject, body);
}

async function sendEmail(recipientEmail, subject, body) {
    const apiKey = await getSecret('TWILIO_SENDGRID_API_KEY');
    const sendGridURL = 'https://api.sendgrid.com/v3/mail/send';

    const emailData = {
        personalizations: [
            {
                to: [
                    {
                        email: recipientEmail,
                    },
                ],
                subject: subject,
            },
        ],
        from: {
            email: 'babatigotvi@gmail.com',
        },
        content: [
            {
                type: 'text/html',
                value: body,
            },
        ],
    };

    return fetch(sendGridURL, {
        method: 'POST',
        headers: {
            Authorization: `Bearer ${apiKey}`,
            'Content-Type': 'application/json',
        },
        body: JSON.stringify(emailData),
    })
        .then(response => {
            if (response.ok) {
                console.log('Email sent successfully');
            } else {
                console.error('Failed to send email');
            }
        })
        .catch(error => {
            console.error('Error:', error);
        });
}
